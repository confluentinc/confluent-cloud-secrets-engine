# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to version, name, agent, and global_job_config will be overwritten by the generated
# content in nightly runs. Code changes made to the remaining sections will not be affected.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: pie-cc-hashicorp-vault-plugin
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'main'"
execution_time_limit:
  hours: 1
global_job_config:
  secrets:
    - name: vault_sem2_approle
  prologue:
    commands:
      - chmod 400 ~/.ssh/id_rsa
      - sem-version go 1.19
      - sem-version python 3.9
      - go version
      - export "GOPATH=$(go env GOPATH)"
      - export "SEMAPHORE_GIT_DIR=${GOPATH}/src/github.com/confluentinc/${SEMAPHORE_PROJECT_NAME}"
      - export "PATH=${GOPATH}/bin:${PATH}"
      - mkdir -vp "${SEMAPHORE_GIT_DIR}" "${GOPATH}/bin"
      - git config --global url."git@github.com:".insteadOf "https://github.com/"
      - checkout
      - make install-vault
      - . mk-include/bin/vault-setup
      - . vault-sem-get-secret aws_credentials
      - . vault-sem-get-secret gitconfig
      - . vault-sem-get-secret ssh_id_rsa
      - . vault-sem-get-secret ssh_config
      - . vault-sem-get-secret netrc
      - . vault-sem-get-secret semaphore-secrets-global
      - . vault-sem-get-secret maven-settings
      - . vault-sem-get-secret cpd_gcloud
      - . vault-sem-get-secret ci-reporting
      - . vault-sem-get-secret v1/ci/kv/service-foundations/cc-mk-include
      - . vault-sem-get-secret dockerhub-semaphore-cred-ro
      - exec &> >(tee -a build.log)
blocks:
  - name: "Build, Test, Release"
    task:
      jobs:
        - name: "Build and Test"
          commands:
            - cd pkg/plugin
            - go build
            - cd ../..
            - GOOS=linux GOARCH=amd64  make build
            - go test -v ./... -json | ./mk-include/bin/decode_test2json.py
      epilogue:
        always:
          commands:
            - test-results publish *.xml
